plugins {
    id 'java'
    id 'war'

}

group = 'com.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}


dependencies {
    // https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin
    implementation group: 'org.apache.maven.plugins', name: 'maven-surefire-plugin', version: '3.2.5'
    providedCompile 'jakarta.platform:jakarta.jakartaee-api:9.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.keycloak:keycloak-core:23.0.4'
    testImplementation group: 'com.intuit.karate', name: 'karate-apache', version: '0.9.6'
    implementation 'org.keycloak:keycloak-adapter-core:23.0.4'
    implementation 'commons-codec:commons-codec:1.16.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.11.0-M2'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
    testImplementation 'com.intuit.karate:karate-apache:0.9.6'
    implementation 'org.apache.maven.plugins:maven-surefire-plugin:2.22.2'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')
    testImplementation 'com.intuit.karate:karate-junit5:1.1.0'
}

tasks.register('doCompile', JavaCompile) {
    source = fileTree('src/main/java')
    classpath = sourceSets.main.compileClasspath
    destinationDirectory.set(file('build/classes'))
    options.encoding = 'UTF-8'
}

tasks.register('doJar', Jar) {
    dependsOn 'doCompile'
    archiveBaseName.set(project.name)
    archiveVersion.set(project.version)
    from tasks.named('doCompile').get().destinationDirectory
    destinationDirectory = file("${buildDir}/libs")
}


tasks.register('doBuild') {
    dependsOn tasks.named('doCompile'), tasks.named('doJar')
}

tasks.register('doClean', Delete) {
    delete rootProject.layout.buildDirectory
}

tasks.named('test'){
    useJUnitPlatform()
}

tasks.register('doMusic', Exec) {
    dependsOn tasks.named('doBuild')

    commandLine 'cmdmp3.exe', 'music.mp3'
}

import java.util.Properties

def envProperties = new Properties()
file('env.properties').withInputStream { inputStream ->
    envProperties.load(inputStream)
}

def javaVersion = envProperties.getProperty('java.version', '20')
def vmArgs
vmArgs = envProperties.getProperty('vm.args', '-Xmx2g')

tasks.register('env') {

    doFirst {
        toolchain {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }
    }

    exec {

        commandLine('copy', 'C:\\Users\\Honor\\OneDrive\\Рабочий стол\\опи\\opi_lab3\\build\\libs\\opi_lab3-1.0-SNAPSHOT.war', 'C:\\Users\\Honor\\Downloads\\wildfly-30.0.0.Final\\wildfly-30.0.0.Final\\standalone\\deployments')

        commandLine('cmd', '/c', 'C:\\Users\\Honor\\Downloads\\wildfly-30.0.0.Final\\wildfly-30.0.0.Final\\bin\\standalone.bat')

    }
}














